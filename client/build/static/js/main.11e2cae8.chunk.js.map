{"version":3,"sources":["components/navbar.component.js","components/exercises-list.component.js","components/edit-exercise.component.js","components/create-exercise.component.js","components/create-user.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","Exercise","props","exercise","username","description","duration","date","substring","_id","onClick","deleteExercise","ExercisesList","state","exercises","fetch","then","response","json","data","setState","catch","err","console","log","id","method","this","filter","el","map","current","key","EditExercise","Date","users","match","params","Number","user","e","preventDefault","headers","body","JSON","stringify","window","location","onSubmit","value","onChange","target","type","required","selected","CreateExercise","length","error","CreateUser","newUser","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.11e2cae8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar sticky-top navbar-dark bg-dark navbar-expand-lg\">\n        <Link to=\"/\" className=\"navbar-brand\">ExcerTracker</Link>\n        <div className=\"collpase navbar-collapse\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"navbar-item\">\n          <Link to=\"/create\" className=\"nav-link\">Create Exercise Log</Link>\n          </li>\n          <li className=\"navbar-item\">\n          <Link to=\"/user\" className=\"nav-link\">Create User</Link>\n          </li>\n        </ul>\n        </div>\n      </nav>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Exercise = (props) => (\n  <tr>\n    <td>{props.exercise.username}</td>\n    <td>{props.exercise.description}</td>\n    <td>{props.exercise.duration}</td>\n    <td>{props.exercise.date.substring(0, 10)}</td>\n    <td>\n      <Link to={\"/edit/\" + props.exercise._id}>Edit</Link>&nbsp;&nbsp;\n      <button\n        className=\"btn-link btn-anchor\"\n        onClick={() => {\n          props.deleteExercise(props.exercise._id);\n        }}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n);\n\nexport default class ExercisesList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { exercises: [] };\n  }\n\n  componentDidMount() {\n    fetch(\"/api/exercises/\")\n      .then((response) => response.json())\n      .then((data) => this.setState({ exercises: data }))\n      .catch((err) => console.log(err));\n  }\n\n  deleteExercise(id) {\n    fetch(`/api/exercises/${id}`, { method: \"DELETE\" })\n      .then((response) => response.json())\n      .then((data) => console.log(data))\n      .catch((err) => console.log(err));\n\n    this.setState({\n      exercises: this.state.exercises.filter((el) => el._id !== id),\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"col\">\n        <h3>Logged Exercises</h3>\n        <table className=\"table\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>Username</th>\n              <th>Description</th>\n              <th>Duration</th>\n              <th>Date</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.exercises.map((current) => {\n              return (\n                <Exercise\n                  exercise={current}\n                  deleteExercise={(id) => this.deleteExercise(id)}\n                  key={current._id}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class EditExercise extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      description: \"\",\n      duration: 0,\n      date: new Date(),\n      users: [],\n    };\n\n    this.id = this.props.match.params.id;\n  }\n\n  componentDidMount() {\n    fetch(\"/api/exercises/\" + this.id)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          username: data.username,\n          description: data.description,\n          duration: Number(data.duration),\n          date: new Date(data.date),\n        });\n      })\n      .catch((err) => console.log(err));\n\n    fetch(\"/api/users/\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ users: data.map((user) => user.username) });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const exercise = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date,\n    };\n\n    console.log(exercise);\n\n    fetch(\"/api/exercises/\" + this.id, {\n      headers: { \"Content-Type\": \"application/json\" },\n      method: \"PUT\",\n      body: JSON.stringify(exercise),\n    })\n      .then((response) => response.json())\n      .then((data) => console.log(data))\n      .catch((err) => console.log(err));\n\n    window.location = \"/\";\n  }\n\n  render() {\n    return (\n      <div className=\"col\">\n        <h3>Edit Exercise Log</h3>\n        <form onSubmit={() => this.onSubmit()}>\n          <div className=\"form-group\">\n            <label>Username: </label>\n            <select\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={(e) => this.setState({ username: e.target.value })}\n            >\n              {this.state.users.map(function (user) {\n                return (\n                  <option key={user} value={user}>\n                    {user}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Description: </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={(e) => this.setState({ description: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Duration (in minutes): </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.duration}\n              onChange={(e) => this.setState({ duration: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Date: </label>\n            <DatePicker\n              selected={this.state.date}\n              onChange={(date) => this.setState({ date: date })}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Edit Exercise Log\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nexport default class CreateExercise extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      description: \"\",\n      duration: 0,\n      date: new Date(),\n      users: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/api/users/\")\n      .then(response => response.json())\n      .then(data => {\n        if (data.length > 0) {\n          this.setState({\n            users: data.map((user) => user.username),\n            username: data[0].username,\n          });\n        }\n      })\n      .catch((error) => console.log(error));\n\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const exercise = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date,\n    };\n    console.log(exercise);\n    fetch(\"/api/exercises/\", {\n      headers: { \"Content-Type\": \"application/json\" },\n      method: \"POST\",\n      body: JSON.stringify(exercise),\n    })\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch(err => console.log(err));\n\n    window.location = \"/\";\n  }\n\n  render() {\n    return (\n      <div className=\"col\">\n        <h3>Create New Exercise Log</h3>\n        <form onSubmit={e => this.onSubmit(e)}>\n          <div className=\"form-group\">\n            <label>Username: </label>\n            <select\n              // ref=\"userInput\"\n              required\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={(e) => this.setState({ username: e.target.value })}\n            >\n              {this.state.users.map(function (user) {\n                return (\n                  <option key={user} value={user}>\n                    {user}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <label>Description: </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.description}\n              onChange={(e) => this.setState({ description: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Duration (in minutes): </label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.duration}\n              onChange={(e) => this.setState({ duration: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Date: </label>\n            <div>\n              <DatePicker\n                selected={this.state.date}\n                onChange={(date) => this.setState({ date: date })}\n              />\n            </div>\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create Exercise Log\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class CreateUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n    };\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n    };\n    fetch(\"/api/users/\", {\n      headers: { \"Content-Type\": \"application/json\" },\n      method: 'POST',\n      body: JSON.stringify(newUser),\n    })\n      .then(response => response.json())\n      .then(data => console.log(data));\n\n    this.setState({\n      username: \"\",\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"col\">\n        <h3>Create New User</h3>\n        <form onSubmit={e => this.onSubmit(e)}>\n          <div className=\"form-group\">\n            <label>Username: </label>\n            <input\n              type=\"text\"\n              required\n              className=\"form-control\"\n              value={this.state.username}\n              onChange={e => this.setState({ username: e.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Create User\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\nimport NavBar from \"./components/navbar.component\";\nimport ExercisesList from \"./components/exercises-list.component\";\nimport EditExercise from \"./components/edit-exercise.component\";\nimport CreateExercise from \"./components/create-exercise.component\";\nimport CreateUser from \"./components/create-user.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n\n      <div className=\"container\">\n        <div className=\"row justify-content-md-center\">\n        \n          <Route path=\"/\" exact component={ExercisesList} />\n          <Route path=\"/edit/:id\" component={EditExercise}/>\n          <Route path=\"/create\" component={CreateExercise}/>\n          <Route path=\"/user\" component={CreateUser}/>\n\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}